--Utworz wyzwalacz ktory:
--Dla inserta:
--> Sprawdzi, czy w kazej grze bierze udzial rowno 6 graczy -> Jezeli nie, dane z gry zostana usuniete 
--> Zmieni status dodanych graczy na 'In Game'

--Dla update'a:
--> Jedyne kolumny, ktora mozna edytowac to kolumny: end_match oraz id_team_winner, jezeli wartoscia jest null
--> Przy aktualizowaniu wartosci z kolumny result_match należy zmienić wartość kolumny blue_essence - za wygraną (V) otrzymujemy 100BE*lvl, za przegrana (D) dostajemy 5BE*lvl. --Wartosc aktualnego MMR kazdego gracza rowniez powinna byc zaktualizowana w zaleznosci od roznicy (sredniego mmr) gracza w z kazdej z druzyn.
--> Gracz z rangą unranked powinien dostać o 30 punktów MMR więcej za wygraną i tracić o 15 punktów mniej za przegraną
--> Po zaktualnizowaniu wyniku meczy należy zmienić status gracza z 'In Queue' na 'Online'

--Dla delete'a:
--> Nie można usuwać gier, które się jeszcze nie zakończyły - wartość null w end_match

ALTER TRIGGER RESTRICTIONS
ON GAME
FOR INSERT, UPDATE, DELETE
AS
	BEGIN
		DECLARE @DELETED_ROWS INT, @INSERTED_ROWS INT
		DECLARE @ID_GAME INT, @ID_PLAYER INT, @END_MATCH DATE, @START_MATCH DATE, @ID_TEAM INT, @ID_TEAM_WINNER INT
		SELECT @DELETED_ROWS = COUNT(*) FROM DELETED
		IF @DELETED_ROWS = 0 -- INSERT
		BEGIN
			SELECT @INSERTED_ROWS = COUNT(*) FROM INSERTED
			PRINT '@INSERTED_ROWS: ' + CAST(@INSERTED_ROWS AS VARCHAR(30))
			IF @INSERTED_ROWS != 6  -- W GRZE MUSI BRAC UDZIAL 6 GRACZY
			BEGIN
				PRINT 'W GRZE MUSI BRAC UDZIAL 6 GRACZY. LICZBA DODANYCH GRACZY: ' + CAST(@INSERTED_ROWS AS VARCHAR(30))
				DECLARE CUR CURSOR FOR SELECT ID_GAME, ID_PLAYER FROM INSERTED
				OPEN CUR
				FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER
				WHILE @@FETCH_STATUS = 0
				BEGIN
					DELETE FROM GAME WHERE ID_GAME = @ID_GAME AND ID_PLAYER = @ID_PLAYER
                    PRINT 'ID GRACZA: ' + CAST(@ID_PLAYER AS VARCHAR(30)) + ' , ID_GRY: ' + CAST(@ID_GAME AS VARCHAR(30))
					FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER
				END
				CLOSE CUR
				DEALLOCATE CUR
			END
			ELSE
			BEGIN -- JEZELI JEST 6 GRACZY ZMIENIAMY ICH STATUS NA 'IN_GAME'
				UPDATE PLAYER SET STATUS = 'IN_GAME' WHERE ID_PLAYER IN (SELECT ID_PLAYER FROM INSERTED)
			END
		END
		ELSE
		BEGIN 
			SELECT @INSERTED_ROWS = COUNT(*) FROM INSERTED
			IF @INSERTED_ROWS = 0 -- DELETE
			BEGIN
				DECLARE CUR CURSOR FOR SELECT ID_GAME, ID_PLAYER, ID_TEAM, START_MATCH, END_MATCH, ID_TEAM_WINNER FROM DELETED
				OPEN CUR
				FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER, @ID_TEAM, @START_MATCH, @END_MATCH, @ID_TEAM_WINNER
				WHILE @@FETCH_STATUS = 0
				BEGIN
					IF @END_MATCH IS NULL
					BEGIN
						INSERT INTO GAME (ID_GAME, ID_PLAYER, ID_TEAM, START_MATCH, END_MATCH, ID_TEAM_WINNER) VALUES (@ID_GAME, @ID_PLAYER, @ID_TEAM, @START_MATCH, @END_MATCH, @ID_TEAM_WINNER)
						PRINT 'PRZYWROCONO REKORD ID_GRACZA: ' + CAST(@ID_PLAYER AS VARCHAR(30)) + ', ID GRY: ' + CAST(@ID_GAME AS VARCHAR(30)) + '.  GRA SIE JESZCZE NIE ZAKONCZYLA!'
					END
					FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER, @ID_TEAM, @START_MATCH, @END_MATCH, @ID_TEAM_WINNER
				END
				CLOSE CUR
				DEALLOCATE CUR
				PRINT 'DELETED'
			END
			ELSE -- UPDATE
			--Dla update'a:
			--> Jedyne kolumny, ktora mozna edytowac to kolumny: end_match oraz id_team_winner, jezeli wartoscia jest null
			--> Przy aktualizowaniu wartosci z kolumny ID_TEAM_WINNER należy zmienić wartość kolumny blue_essence - za wygraną (V) otrzymujemy 100BE, za przegrana (D) dostajemy 50BE. --Wartosc aktualnego MMR kazdego gracza rowniez powinna byc zaktualizowana w zaleznosci od roznicy (sredniego mmr) gracza w z kazdej z druzyn.
			--> Gracz z rangą unranked powinien dostać o 5 punktów MMR więcej za wygraną i tracić o 3 punktów mniej za przegraną
			--> Po zaktualnizowaniu wyniku meczy należy zmienić status gracza z 'In_Queue' na 'Online'
			BEGIN
				DECLARE @ALLY_TEAM_AVG_MMR INT, @ENEMY_TEAM_AVG_MMR INT, @ID_ENEMY_TEAM INT
				IF COLUMNS_UPDATED()&1 = 1 OR COLUMNS_UPDATED()&2 = 2 OR COLUMNS_UPDATED()&4 = 4 OR COLUMNS_UPDATED()&8 = 8
				BEGIN
					PRINT 'NIE MOZNA EDYTOWAC NASTEPUJACYCH KOLUMN: ID_GAME, PLAYER_ID, ID_TEAM, START_MATCH! DANE ZOSTANA WYCOFANE'
					DECLARE CUR CURSOR FOR SELECT ID_GAME, ID_PLAYER, ID_TEAM, START_MATCH, END_MATCH, ID_TEAM_WINNER FROM DELETED
					OPEN CUR
					FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER, @ID_TEAM, @START_MATCH, @END_MATCH, @ID_TEAM_WINNER
					WHILE @@FETCH_STATUS = 0
					BEGIN
						DELETE FROM GAME WHERE ID_GAME = @ID_GAME AND ID_PLAYER = @ID_PLAYER
						INSERT INTO GAME (ID_GAME, ID_PLAYER, ID_TEAM, START_MATCH, END_MATCH, ID_TEAM_WINNER) VALUES (@ID_GAME, @ID_PLAYER, @ID_TEAM, @START_MATCH, @END_MATCH, @ID_TEAM_WINNER)
						FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER, @ID_TEAM, @START_MATCH, @END_MATCH, @ID_TEAM_WINNER
					END
					CLOSE CUR
					DEALLOCATE CUR
				END
				ELSE
				BEGIN
					IF COLUMNS_UPDATED()&32 = 32
					BEGIN
						DECLARE @OLD_MMR INT, @NEW_MMR INT
						DECLARE CUR CURSOR FOR SELECT ID_GAME, ID_PLAYER, ID_TEAM, ID_TEAM_WINNER FROM INSERTED
						OPEN CUR
						FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER, @ID_TEAM, @ID_TEAM_WINNER
						WHILE @@FETCH_STATUS = 0
						BEGIN
							UPDATE PLAYER SET STATUS = 'ONLINE' WHERE ID_PLAYER = @ID_PLAYER
							IF @ID_TEAM = @ID_TEAM_WINNER
							BEGIN
								
								SELECT @ALLY_TEAM_AVG_MMR = AVG(PLAYER.MMR) FROM PLAYER INNER JOIN GAME ON GAME.ID_PLAYER = PLAYER.ID_PLAYER WHERE GAME.ID_GAME = @ID_GAME AND ID_TEAM = @ID_TEAM
								SELECT TOP 1 @ID_ENEMY_TEAM = ID_TEAM FROM GAME WHERE ID_GAME = @ID_GAME AND ID_TEAM != @ID_TEAM
								SELECT @ENEMY_TEAM_AVG_MMR = AVG(PLAYER.MMR) FROM PLAYER INNER JOIN GAME ON GAME.ID_PLAYER = PLAYER.ID_PLAYER WHERE GAME.ID_GAME = @ID_GAME AND ID_TEAM = @ID_ENEMY_TEAM
								
								IF EXISTS (SELECT 1 FROM PLAYER WHERE ID_PLAYER = @ID_PLAYER AND ID_RANK = (SELECT ID_RANK FROM "RANK" WHERE NAME = 'UNRANKED'))
								BEGIN
									UPDATE PLAYER SET BLUE_ESSENCES = BLUE_ESSENCES + 100 WHERE ID_PLAYER = @ID_PLAYER
									UPDATE PLAYER SET MMR = CAST(MMR + 20 * (@ALLY_TEAM_AVG_MMR/@ENEMY_TEAM_AVG_MMR) AS INT) + 5 WHERE ID_PLAYER = @ID_PLAYER
								END
								ELSE
								BEGIN
									UPDATE PLAYER SET BLUE_ESSENCES = BLUE_ESSENCES + 100 WHERE ID_PLAYER = @ID_PLAYER
									UPDATE PLAYER SET MMR = CAST(MMR + 20 * (@ALLY_TEAM_AVG_MMR/@ENEMY_TEAM_AVG_MMR) AS INT) WHERE ID_PLAYER = @ID_PLAYER
								END
							END
							ELSE
							BEGIN
								
								SELECT @ALLY_TEAM_AVG_MMR = AVG(PLAYER.MMR) FROM PLAYER INNER JOIN GAME ON GAME.ID_PLAYER = PLAYER.ID_PLAYER WHERE GAME.ID_GAME = @ID_GAME AND ID_TEAM = @ID_TEAM
								SELECT TOP 1 @ID_ENEMY_TEAM = ID_TEAM FROM GAME WHERE ID_GAME = @ID_GAME AND ID_TEAM != @ID_TEAM
								SELECT @ENEMY_TEAM_AVG_MMR = AVG(PLAYER.MMR) FROM PLAYER INNER JOIN GAME ON GAME.ID_PLAYER = PLAYER.ID_PLAYER WHERE GAME.ID_GAME = @ID_GAME AND ID_TEAM = @ID_ENEMY_TEAM
								
								IF EXISTS (SELECT 1 FROM PLAYER WHERE ID_PLAYER = @ID_PLAYER AND ID_RANK = (SELECT ID_RANK FROM "RANK" WHERE NAME = 'UNRANKED'))
								BEGIN
									SELECT @OLD_MMR = MMR FROM PLAYER WHERE ID_player = @ID_PLAYER
									SET @NEW_MMR = (@OLD_MMR - 20 * (@ALLY_TEAM_AVG_MMR*2/@ENEMY_TEAM_AVG_MMR)) + 5
									UPDATE PLAYER SET BLUE_ESSENCES = BLUE_ESSENCES + 100 WHERE ID_PLAYER = @ID_PLAYER
									UPDATE PLAYER SET MMR = @NEW_MMR WHERE ID_PLAYER = @ID_PLAYER
									PRINT 'OLD MMR = ' + CAST(@OLD_MMR AS VARCHAR(30)) + ', NEW MMR = ' + CAST(@NEW_MMR AS VARCHAR(30))
									PRINT CAST((20 * (@ALLY_TEAM_AVG_MMR/@ENEMY_TEAM_AVG_MMR)) AS VARCHAR(30))
									PRINT 'ALL' + CAST(@ALLY_TEAM_AVG_MMR AS VARCHAR(30))
									PRINT 'ENE' + CAST(@ENEMY_TEAM_AVG_MMR AS VARCHAR(30)) 
								END
								ELSE
								BEGIN
									SELECT @OLD_MMR = MMR FROM PLAYER WHERE ID_player = @ID_PLAYER
									SET @NEW_MMR = (@OLD_MMR - 20 * (@ALLY_TEAM_AVG_MMR*2/@ENEMY_TEAM_AVG_MMR))
									UPDATE PLAYER SET BLUE_ESSENCES = BLUE_ESSENCES + 100 WHERE ID_PLAYER = @ID_PLAYER
									UPDATE PLAYER SET MMR = @NEW_MMR WHERE ID_PLAYER = @ID_PLAYER
									PRINT 'OLD MMR = ' + CAST(@OLD_MMR AS VARCHAR(30)) + ', NEW MMR = ' + CAST(@NEW_MMR AS VARCHAR(30))
									PRINT CAST((20 * (@ALLY_TEAM_AVG_MMR/@ENEMY_TEAM_AVG_MMR)) AS VARCHAR(30))
									PRINT 'ALL' + CAST(@ALLY_TEAM_AVG_MMR AS VARCHAR(30))
									PRINT 'ENE' + CAST(@ENEMY_TEAM_AVG_MMR AS VARCHAR(30))
								END
							END
							FETCH NEXT FROM CUR INTO @ID_GAME, @ID_PLAYER, @ID_TEAM, @ID_TEAM_WINNER
						END
						CLOSE CUR
						DEALLOCATE CUR
					END
				END
			END
		END
	END